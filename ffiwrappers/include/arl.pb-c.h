/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: arl.proto */

#ifndef PROTOBUF_C_arl_2eproto__INCLUDED
#define PROTOBUF_C_arl_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _UVW UVW;
typedef struct _VIS VIS;
typedef struct _Data Data;
typedef struct _Phasecentre Phasecentre;
typedef struct _ARLVisPB ARLVisPB;


/* --- enums --- */


/* --- messages --- */

struct  _UVW
{
  ProtobufCMessage base;
  double u;
  double v;
  double w;
};
#define UVW__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&uvw__descriptor) \
    , 0, 0, 0 }


struct  _VIS
{
  ProtobufCMessage base;
  double real;
  double imag;
};
#define VIS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vis__descriptor) \
    , 0, 0 }


struct  _Data
{
  ProtobufCMessage base;
  size_t n_index;
  int32_t *index;
  size_t n_uvw;
  double *uvw;
  size_t n_time;
  double *time;
  size_t n_frequency;
  double *frequency;
  size_t n_channel_bandwidth;
  double *channel_bandwidth;
  size_t n_integration_time;
  double *integration_time;
  size_t n_antenna1;
  int32_t *antenna1;
  size_t n_antenna2;
  int32_t *antenna2;
  size_t n_vis;
  VIS **vis;
  size_t n_weight;
  double *weight;
  size_t n_imaging_weight;
  double *imaging_weight;
};
#define DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&data__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _Phasecentre
{
  ProtobufCMessage base;
  char *ra;
  char *dec;
};
#define PHASECENTRE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&phasecentre__descriptor) \
    , NULL, NULL }


struct  _ARLVisPB
{
  ProtobufCMessage base;
  int32_t nvis;
  int32_t npol;
  Data *data;
  Phasecentre *phasecentre;
};
#define ARLVIS_PB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arlvis_pb__descriptor) \
    , 0, 0, NULL, NULL }


/* UVW methods */
void   uvw__init
                     (UVW         *message);
size_t uvw__get_packed_size
                     (const UVW   *message);
size_t uvw__pack
                     (const UVW   *message,
                      uint8_t             *out);
size_t uvw__pack_to_buffer
                     (const UVW   *message,
                      ProtobufCBuffer     *buffer);
UVW *
       uvw__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   uvw__free_unpacked
                     (UVW *message,
                      ProtobufCAllocator *allocator);
/* VIS methods */
void   vis__init
                     (VIS         *message);
size_t vis__get_packed_size
                     (const VIS   *message);
size_t vis__pack
                     (const VIS   *message,
                      uint8_t             *out);
size_t vis__pack_to_buffer
                     (const VIS   *message,
                      ProtobufCBuffer     *buffer);
VIS *
       vis__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   vis__free_unpacked
                     (VIS *message,
                      ProtobufCAllocator *allocator);
/* Data methods */
void   data__init
                     (Data         *message);
size_t data__get_packed_size
                     (const Data   *message);
size_t data__pack
                     (const Data   *message,
                      uint8_t             *out);
size_t data__pack_to_buffer
                     (const Data   *message,
                      ProtobufCBuffer     *buffer);
Data *
       data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   data__free_unpacked
                     (Data *message,
                      ProtobufCAllocator *allocator);
/* Phasecentre methods */
void   phasecentre__init
                     (Phasecentre         *message);
size_t phasecentre__get_packed_size
                     (const Phasecentre   *message);
size_t phasecentre__pack
                     (const Phasecentre   *message,
                      uint8_t             *out);
size_t phasecentre__pack_to_buffer
                     (const Phasecentre   *message,
                      ProtobufCBuffer     *buffer);
Phasecentre *
       phasecentre__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   phasecentre__free_unpacked
                     (Phasecentre *message,
                      ProtobufCAllocator *allocator);
/* ARLVisPB methods */
void   arlvis_pb__init
                     (ARLVisPB         *message);
size_t arlvis_pb__get_packed_size
                     (const ARLVisPB   *message);
size_t arlvis_pb__pack
                     (const ARLVisPB   *message,
                      uint8_t             *out);
size_t arlvis_pb__pack_to_buffer
                     (const ARLVisPB   *message,
                      ProtobufCBuffer     *buffer);
ARLVisPB *
       arlvis_pb__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   arlvis_pb__free_unpacked
                     (ARLVisPB *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*UVW_Closure)
                 (const UVW *message,
                  void *closure_data);
typedef void (*VIS_Closure)
                 (const VIS *message,
                  void *closure_data);
typedef void (*Data_Closure)
                 (const Data *message,
                  void *closure_data);
typedef void (*Phasecentre_Closure)
                 (const Phasecentre *message,
                  void *closure_data);
typedef void (*ARLVisPB_Closure)
                 (const ARLVisPB *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor uvw__descriptor;
extern const ProtobufCMessageDescriptor vis__descriptor;
extern const ProtobufCMessageDescriptor data__descriptor;
extern const ProtobufCMessageDescriptor phasecentre__descriptor;
extern const ProtobufCMessageDescriptor arlvis_pb__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_arl_2eproto__INCLUDED */
