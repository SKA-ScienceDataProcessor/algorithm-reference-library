---
apiVersion: v1
kind: Service
metadata:
  name: notebook-{{ template "arl-cluster.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: notebook-{{ template "arl-cluster.name" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ template "arl-cluster.chart" . }}"
spec:
  type: ClusterIP
  ports:
  - name: jupyter
    port: 8888
    targetPort: jupyter
    protocol: TCP
  selector:
    app.kubernetes.io/name:  notebook-{{ template "arl-cluster.name" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notebook-{{ template "arl-cluster.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: notebook-{{ template "arl-cluster.name" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ template "arl-cluster.chart" . }}"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: notebook-{{ template "arl-cluster.name" . }}
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: notebook-{{ template "arl-cluster.name" . }}
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        helm.sh/chart: "{{ template "arl-cluster.chart" . }}"
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      containers:
      - name: notebook-{{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: ARL_DASK_SCHEDULER
            value: dask-scheduler-{{ template "arl-cluster.name" . }}-{{ .Release.Name }}.{{ .Release.Namespace }}:8786
          - name: JUPYTER_PASSWORD
            value: "{{ .Values.jupyter.password }}"
          - name: NOTEBOOK_PORT
            value: "8888"
        volumeMounts:
        - mountPath: /arl/data
          name: arldata
          readOnly: false
        ports:
        - name: jupyter
          containerPort: 8888
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api
            port: 8888
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 20
          failureThreshold: 3
      volumes:
      # - hostPath:
      #     path: ${WORKER_ARL_DATA}
      #     type: DirectoryOrCreate
      #   name: arldata
      - name: arldata
        persistentVolumeClaim:
          claimName: arldata-{{ template "arl-cluster.name" . }}-{{ .Release.Name }}
      # - name: arldata
      #   nfs:
      #     server: "{{ .Values.nfs.server }}"
      #     path: "/data"
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
